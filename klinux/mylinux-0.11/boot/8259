图中，终端请求寄存器IRR用来保存请求输入引脚上所有请求服务终端级，寄存器的8个比特位（D7-D0）分别对应引脚IR7-IR0。终端屏蔽寄存器IMR用于保存屏蔽的终端请求线对应的比特为，寄存器的8位也是对英8个终端级。哪个比特位被置1就屏蔽哪一级终端请求。即IMR对IRR进行处理，其每个比特位对应IRR的每个请求比特位。对高优先级输入线的屏蔽并不会影响低优先级，选通最高优先级的终端请求到正在服务的寄存器ISR中。ISR中保存在正在接受服务的中断请求。控制逻辑方框中的寄存器组用于接受CPU产生的两类命令。在8259A可以可以正常操作之前，必须首先设置初始化字ICW寄存器内容。而在其工作过程中，则可以使用写入操作指令OCW寄存器来随时设置和管理8259A的工作方式。A0线用于选择操作的寄存器。在PC/AT微机系统中，当A0线为0时芯片的端口地址是0x20和0xA0（从芯片），当A0=1时端口就是0x21和0xA1。
   来自各个设备的终端请求线分别链接到8259A的IR0-IR7中断请求引脚上。当这些引脚有一个或多个终端请求信号到来时，终端请求寄存器IRR中相应的比特位被置为锁存。此时这些引脚上有一个或多个终端请求信号来时，终端请求寄存器IRR中相应的比特位被置位。此时若终端屏蔽寄存器IMR中对应位被置位，则相应的中断请求就不会送到优先级解析器中。对于未屏蔽的中断请求被送到优先级解析器后，优先级高的中断请求会被选出。此时8259A就会向CPU一个INT信号，而CPU则会在执行完当前一套指令后向8259A发送一个INTA来响应中断信号。8259A在收到这个响应信号之后就会把所选出的最高优先级中断请求保存在正在服务寄存器ISR中，即ISR中对应中断请求级的比特位被置位。与此同时，中断请求寄存器IRR中的相应比特位被复位，表示该中断请求开始正被处理中。
   此后，CPU会向8259A发出第2个INTA脉冲信号，该信号用于通知8259A发送中断信号，因此在该脉冲信号期间8259A就会把一个代表中断号的8位数据发送到数据总线供CPU读取。
   到此为止，CPU终端周期结束/如果8259A使用的是自动结束中断AEOI方式，那么在第2个INTA脉冲信号的结尾除正在服务寄存器ISR中的当前服务中断比特位就会被复位。否则的话，若8259A处于非自动结束方式，那么在中断服务程序结束时程序就需要向8259A芯片发送一个结束中断（EOI）命令以复位ISR中的比特位。终端请求来自接连的第2个8259A芯片，那么就需要向两个芯片都发送EOI命令。此后8259A就会去判断下一个最高优先级中断，并重复上述处理过程。下面我们先给出出书画命令字的编程放在，然后对其中用到的操作方式做进一步说明。
2 初始化命令字编程
   可编程控制器8259A主要有4种工作方式：1全嵌套方式 2循环优先级方式 3特殊屏蔽方式4程序查询方式。通过对8259A进行编程，我们可以选定8259A的当前工作方式。编程时分两个阶段。一是在8259A工作之前对每个8259A芯片4个初始化命令字（ICW1-ICW4）寄存器的写入编程，二是在工作过程中随时对8259A的3个操作命令（OCW1-OCW3）进行编程。在初始化之后，操作命令字的编程操作流程如6-8所示，由图可以看出，对ICW1和ICW2的设置是必须的。而只有当系统中包含多片8259A芯片并且是接连的情况下才需要对ICW3进行设置。这需要在ICW1的设置中明确指出。另外，需要对ICW4进行设置也需要在ICW1中指明
（1）ICW1当发送的字节第5比特位（D4）=1并且地址线A0=0时表示对ICW1编程。此时对于PC/AT微机系统的多篇级联情况下，8259A主芯片端口地址是0x20,从芯片端口是0xA0,ICW1的格式如下
   在Linux0.11内核中，ICW1被设置为0x11，。表示终端请求是边沿出发，多篇8259A级联并最后需要发送ICW4 
  （2）ICW2用于设置芯片送出的中断号5位。中断号在设置了ICW1之后，当A0=1表示对ICW2设置，此时对于PC/AT微机系统的多片级联情况下，8259A主芯片的端口地址是0x21,从芯片的端口地址是0xA1.ICW2格式如下
   在MCS80/85系统中，位D7-D0表示的A15-A8与ICW1设置的A7-A5组成中断服务程序页面地址。在使用8086/88处理器的系统或兼容系统中T7-T3是中断号的高5位，与8259A芯片自动设置的低3位组成8位中断号。8259A在收到第2个中断响应脉冲INTA时会发送到数据总线上，以供CPU读取。
   Linux 0.11系统把主片的ICW2设置为0x20,表示主片请求0级-7级对应中断号范围是0x20-0x27.而从片的ICW2被设置成0x28表示从片中断请求8级-15级对应的中断号范围是0x28-0x2f0010 0000 
   （3）ICW3用于具有多个8259A芯片级联时，加载8位的从寄存器，端口地址同上。ICW3格式如下
    主片S7-S0各比特位对应级联的从片。哪片为1则表示主片的该终端请求引脚IR上信号来自从片，否则对于的IR引脚没有连从片
    从片的ID2-ID0三个比特位对应各从片的标识号，即链接到从片的中断级。从某个从片收到的级联（CAS2-CAS0）输入的值与自己的ID2-ID0相等，则表示此从片被选中。因此该从片应该向数据总线发送当前选中中断请求的中断号。
    Linux 0.11呢和把8259A主片的ICW3设置为0x04 0000 0100 即S2=1,其余各位为0.表示主芯片的IR2引脚链接在一个从芯片。从芯片的ICW3设置为0x02,即标识号为2.表示从芯片链接到主芯片的IR2引脚。因此，终端请求优先级的排列次序为0为最高级 接下来是8-15级，最后是3-7级
   （4）ICW4 当ICW1的位0（ICW4）置位时，表示需要ICW4。地址线A0=1,端口地址同上说明。ICWR表格
    Linux 0.11 内核送往8259A芯片和从芯片的ICW4命令字的值均为0x01，。表示8259A芯片被设置成普通先套，非缓冲，非自动结束中断方式，并且用于8086及其兼容模式

3 操作命令字变成
     在8259A设置了初始化名利寄存器后，芯片就已准备好接收设备的中断请求信号了。但在8259A工作期间。我们也可以利用操作命令字OCW1-OCW3来监测8259A的工作状况，或随时改变初始化时设定的8259A的工作方式。
（1）OCW1用于对8259A中中断屏蔽寄存器IMR进行读写操作。地址线为A0需为1.端口地址说明同上。OCW1格式如下
    在D7-D0对应8个中断请求级7-0的屏蔽位M7-M0,若M=1，则屏蔽对应的中断请求级;若M=0,则允许对于的中断请求级。另外，屏蔽高优先级并不会影响其低优先级的中断请求。
    在Linux 0.11内核初始化过程中，代码在设置好相关设备驱动后就会利用该操作命令来修改相关中断请求屏蔽位。例如在软盘驱动程序初始化结束时，为了润需软盘设备发出中断请求，就会对读端口0x21以取得8259A芯片的当前屏蔽字节，然后与上0x40来复位对应软盘控制器链接的中断请求6的屏蔽位，最后再回写到中断屏蔽寄存器中。
   （2）OCW2用于发送EOL命令或设置中断请求优先级的自动循环方式。当比特位D4D3 =00，地址线A0=0时表示对OCW2进行编程设置。操作命令OCW2的格式如下
其中D7-D5的组合的作用和含义见下表6-11所示。其中带有×号的可通过设置L2-L0来指定优先级使ISR复位，或者选择特殊循环优先级成为当前最低优先级
   在Linux 0.11内核仅使用该操作命令咋中断处理过程结束之前向8259A发送结束中断EOI命令。所以是哦iyong0CW2值为0x20,表示嵌套方式下的非特殊结束EOI命令
    （3）0CW3用于设置特殊屏蔽方式和读寄存器状态（IRR和ISR）。当D4D3=01 地址线A0=0时，表示对OCW3进行编程（读/写）。但在Linux 0.11内核中并没有用到该操作命令字。OCW3的格式表示如下

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE abiword PUBLIC "-//ABISOURCE//DTD AWML 1.0 Strict//EN" "http://www.abisource.com/awml.dtd">
<abiword template="false" xmlns:ct="http://www.abisource.com/changetracking.dtd" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:math="http://www.w3.org/1998/Math/MathML" xid-max="475" xmlns:dc="http://purl.org/dc/elements/1.1/" fileformat="1.1" xmlns:svg="http://www.w3.org/2000/svg" xmlns:awml="http://www.abisource.com/awml.dtd" xmlns="http://www.abisource.com/awml.dtd" xmlns:xlink="http://www.w3.org/1999/xlink" version="3.0.0" xml:space="preserve" props="dom-dir:ltr; document-footnote-restart-section:0; document-endnote-type:numeric; document-endnote-place-enddoc:1; document-endnote-initial:1; lang:zh-CN; document-endnote-restart-section:0; document-footnote-restart-page:0; document-footnote-type:numeric; document-footnote-initial:1; document-endnote-place-endsection:0">
<!-- ======================================================================== -->
<!-- This file is an AbiWord document.                                        -->
<!-- AbiWord is a free, Open Source word processor.                           -->
<!-- More information about AbiWord is available at http://www.abisource.com/ -->
<!-- You should not edit this file by hand.                                   -->
<!-- ======================================================================== -->

<metadata>
<m key="abiword.date_last_changed">Sat Jul 12 21:06:13 2014
</m>
<m key="abiword.generator">AbiWord</m>
<m key="dc.date">2014-07-03T19:57:19.946821532</m>
<m key="dc.format">application/x-abiword</m>
<m key="meta:editing-cycles">3</m>
<m key="meta:editing-duration">PT9M44S</m>
</metadata>
<rdf>
<t  s="styles.xml"  p="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"  objecttype="1"  xsdtype=""  >http://docs.oasis-open.org/ns/office/1.2/meta/odf#StylesFile</t>
<t  s="content.xml"  p="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"  objecttype="1"  xsdtype=""  >http://docs.oasis-open.org/ns/office/1.2/meta/odf#ContentFile</t>
<t  s="manifest.rdf"  p="http://docs.oasis-open.org/ns/office/1.2/meta/pkg#hasPart"  objecttype="1"  xsdtype=""  >styles.xml</t>
<t  s="manifest.rdf"  p="http://docs.oasis-open.org/ns/office/1.2/meta/pkg#hasPart"  objecttype="1"  xsdtype=""  >content.xml</t>
<t  s="manifest.rdf"  p="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"  objecttype="1"  xsdtype=""  >http://docs.oasis-open.org/ns/office/1.2/meta/pkg#Document</t>
</rdf>
<history version="3" edit-time="35132" last-saved="1405170373" uid="c37401e2-063e-11e4-83d3-8d9d8a1484d2">
<version id="1" started="1404793502" uid="d48bffe8-0657-11e4-83d3-8d9d8a1484d2" auto="0" top-xid="349"/>
<version id="3" started="1405164872" uid="4ce2e662-09c5-11e4-993a-c708c394b43d" auto="0" top-xid="472"/>
</history>
<styles>
<s type="P" name="Normal" followedby="Current Settings" props="text-indent:0in; font-weight:normal; margin-top:0pt; margin-left:0pt; font-stretch:normal; line-height:1.0; text-align:left; bgcolor:transparent; lang:en-US; dom-dir:ltr; margin-bottom:0pt; default-tab-interval:0.741cm; text-decoration:none; font-variant:normal; color:000000; text-position:normal; font-size:12pt; margin-right:0pt; font-style:normal; widows:2; font-family:Liberation Serif"/>
<s type="P" name="Caption" basedon="Normal" followedby="Caption" props="margin-top:0.212cm; font-size:12pt; margin-bottom:0.212cm; font-style:italic"/>
<s type="P" name="Heading" basedon="Normal" followedby="Text body" props="margin-top:0.423cm; keep-with-next:yes; margin-bottom:0.212cm; font-family:Liberation Sans; font-size:14pt"/>
<s type="P" name="Text body" basedon="Normal" followedby="Text body" props="margin-top:0cm; line-height:1.200000; margin-bottom:0.247cm"/>
</styles>
<pagesize pagetype="A4" orientation="portrait" width="210.000000" height="297.000000" units="mm" page-scale="1.000000"/>
<section xid="15" props="page-margin-right:2cm; page-width:21.001cm; page-margin-left:2cm; page-orientation:portrait; page-margin-bottom:2cm; page-margin-top:2cm; page-height:29.7cm">
<p style="Normal" xid="16">Nginx</p>
<p style="Normal" xid="17"><c></c><c></c></p>
<p style="Normal" xid="18">Nginx+keeplive实现高可用  两者都是轻量级别的  很适合结合在一起 </p>
<p style="Normal" xid="19"><c></c><c></c></p>
<p style="Normal" xid="20">Nginx特性：web服务器+ 反向代理  如果不要求 apache特性 apache是首选 </p>
<p style="Normal" xid="21">    基于file AIO   异步IO 实现的 </p>
<p style="Normal" xid="22">   Aysnchronous  时间见驱动 + 边缘处罚</p>
<p style="Normal" xid="23">   </p>
<p style="Normal" xid="24">    </p>
<p style="Normal" xid="25"><c></c><c></c></p>
<p style="Normal" xid="26">作为基本http服务的特性</p>
<p style="Normal" xid="27">    索引文件 </p>
<p style="Normal" xid="28">    自动索引  </p>
<p style="Normal" xid="29">    打开文件描述符 </p>
<p style="Normal" xid="30">    使用缓存加速反响failing  简单负载均衡以及容错功能 需要第三方模块 淘宝对nginx做了诸多扩充   </p>
<p style="Normal" xid="31">     叫做tengine </p>
<p style="Normal" xid="32">     远程fastcgi</p>
<p style="Normal" xid="33">     基于uwsgi支持phyton</p>
<p style="Normal" xid="34">     SCGI</p>
<p style="Normal" xid="35">     memcache服务器模板 自身也有缓存能力 默认缓存在磁盘中，可以直接链接memcached</p>
<p style="Normal" xid="36">     模块化设计 （独特）</p>
<p style="Normal" xid="37">     过滤器 gzip 压缩  ranges支持   chuniked响应  XSLY  SSL 以及图像缩放  灾SSI过滤中 将某些部分做成静态的 某些做成动态  静态缓存 </p>
<p style="Normal" xid="38">      </p>
<p style="Normal" xid="39">      基于名字和ip的虚拟主机</p>
<p style="Normal" xid="40">      keep-alive和pipelined</p>
<p style="Normal" xid="41">      在线升级是不需要中断正在处理的请求（热部署 鸟玩应）  老worker进程和新worker进进程</p>
<p style="Normal" xid="42">      带缓存的日志写操作 </p>
<p style="Normal" xid="43">      快速日志滚动 </p>
<p style="Normal" xid="44">      支持3xx  5xx 错误代码重定向 </p>
<p style="Normal" xid="45">      重写模块  rewrite</p>
<p style="Normal" xid="46">       根据客户端执行不同的访问控制</p>
<p style="Normal" xid="47">      支持IP地址和http基本认证机制的访问</p>
<p style="Normal" xid="48">       支持验证http referce 容许拦截头中有非法字符的  referce  通过哪个链接过来的 （盗链）</p>
<p style="Normal" xid="49">       支持flv ，mp4流  客户端边下载边播放 </p>
<p style="Normal" xid="50">      支持速度限制  贷款限制  连接数请求数 </p>
<p style="Normal" xid="51">       一个主进程  多个工作进程  主进程超级用户  其他进程普通用户  </p>
<p style="Normal" xid="52">         </p>
<p style="Normal" xid="53">主进程所做的工作 </p>
<p style="Normal" xid="54">   1读取并验证配置信息</p>
<p style="Normal" xid="55">   2 创建绑定  关闭套芥子</p>
<p style="Normal" xid="56">   3 启动 种植以及维护 worker进程个数</p>
<p style="Normal" xid="57">   4 无需终止服务  而重新配置工作特性</p>
<p style="Normal" xid="58">   5  控制非中断方式程序升级 启用新的二进制程序并且在需要时回滚到老版本</p>
<p style="Normal" xid="59">   6 重新打开日志文件  实现日志滚动</p>
<p style="Normal" xid="60">   7  编译嵌入式perl脚本</p>
<p style="Normal" xid="61"><c></c><c></c></p>
<p style="Normal" xid="62">worker进程主要完成的任务包括</p>
<p style="Normal" xid="63">  1 接收传入并处理来自客户端链接 </p>
<p style="Normal" xid="64">  2 提供反向代理以及过滤功能 </p>
<p style="Normal" xid="65">   3 任何其他任务</p>
<p style="Normal" xid="66"><c></c><c></c></p>
<p style="Normal" xid="67"><c></c><c></c></p>
<p xid="68"><pbr/>cache loade进程完成的任务 </p>
<p style="Normal" xid="69">   1  检查缓存存储中的缓存对象</p>
<p style="Normal" xid="70">   2   使用缓存元数据建立内存数据结构 </p>
<p style="Normal" xid="71">cache manager进程的任务</p>
<p style="Normal" xid="72">   缓存的失效以及过期检验</p>
<p style="Normal" xid="73"><c></c><c></c></p>
<p style="Normal" xid="74">     </p>
<p style="Normal" xid="75">          </p>
<p style="Normal" xid="76"><c></c><c></c></p>
<p style="Normal" xid="77"><c></c><c></c></p>
<p style="Normal" xid="78">varaish  squid两种mamcache的实现 </p>
<p style="Normal" xid="79">httpd也支持缓存  既可以支持硬盘也支持内存</p>
<p style="Normal" xid="80"><c></c><c></c></p>
<p style="Normal" xid="81"><c></c><c></c></p>
<p style="Normal" xid="82"><c></c><c></c></p>
<p style="Normal" xid="83"><c></c><c></c></p>
<p style="Normal" xid="84">nginx 配置文件 的配置有个几个不同的上下问  main，http， upstream location ，server ，mail</p>
<p style="Normal" xid="85"><c></c><c></c></p>
<p style="Normal" xid="86"><c></c><c></c></p>
<p style="Normal" xid="87">http {</p>
<p style="Normal" xid="88">  server{</p>
<p style="Normal" xid="89">       location {</p>
<p style="Normal" xid="90">           }</p>
<p style="Normal" xid="91">    }</p>
<p style="Normal" xid="92">}</p>
<p style="Normal" xid="93"><c></c><c></c></p>
<p style="Normal" xid="94">支持</p>
<p style="Normal" xid="95">架构和扩展特性</p>
<p style="Normal" xid="96">一个进程喝多个工作进程  工作进程以非特权用户运行</p>
<p style="Normal" xid="97"> 支持的时间机制  kquque（FreeBSD 4.1+） epoll（linux 2.6+） rt signals（linux 2.2.19+） /dev/psll（Soloria 10） select以及polls</p>
<p style="Normal" xid="98">众多支持的kqueue特性包括 ev_clear 。EV_DISAB;E（临时禁止时间） NOTE_LOWAT ,EV_ROF 可用数据的数量 错误代码</p>
<p style="Normal" xid="99">文件aio </p>
<p style="Normal" xid="100">DIRECTIO </p>
<p style="Normal" xid="101">支持Accept-filters 和 TCP_DEFER_ACCEPT</p>
<p style="Normal" xid="102">10000个活跃的HTTP keep-alive 链接仅占用2.5M内存</p>
<p style="Normal" xid="103">尽可能避免拷贝操作</p>
<p style="Normal" xid="104">sendfile   sendfile 64  sendfilev   数据直接在内核中准备发送  不用到用户空间白走一回  避免两次复制</p>
<p style="Normal" xid="105"><c></c><c></c></p>
<p style="Normal" xid="106"><c></c><c></c></p>
<p style="Normal" xid="107">什么是sendfile？</p>
<p style="Normal" xid="108">Ngnix    </p>
<p style="Normal" xid="109"><c></c><c></c></p>
<p style="Normal" xid="110"><c></c><c></c></p>
<p style="Normal" xid="111"><c></c><c></c></p>
<p style="Normal" xid="112">安装nginx </p>
<p style="Normal" xid="113"><c></c><c></c></p>
<p style="Normal" xid="114"> yum -y groupinstall 'Development Tools' </p>
<p style="Normal" xid="115">yum install pcre-devel   pcre 是perl的扩展表达式 </p>
<p style="Normal" xid="116"><c></c><c></c></p>
<p style="Normal" xid="117"><c></c><c></c></p>
<p style="Normal" xid="118"><c></c><c></c></p>
<p xid="119"><pbr/>2、安装 </p>
<p style="Normal" xid="120"><c></c><c></c></p>
<p style="Normal" xid="121">首先添加用户nginx，实现以之运行nginx服务进程： </p>
<p style="Normal" xid="122"># groupadd -r nginx </p>
<p style="Normal" xid="123"># useradd -r -g nginx nginx </p>
<p style="Normal" xid="124"><c></c><c></c></p>
<p style="Normal" xid="125">接着开始编译和安装： </p>
<p style="Normal" xid="126"># ./configure \ </p>
<p style="Normal" xid="127">  --prefix=/usr \ </p>
<p style="Normal" xid="128">  --sbin-path=/usr/sbin/nginx \ </p>
<p style="Normal" xid="129">  --conf-path=/etc/nginx/nginx.conf \ </p>
<p style="Normal" xid="130">  --error-log-path=/var/log/nginx/error.log \ </p>
<p style="Normal" xid="131">  --http-log-path=/var/log/nginx/access.log \ </p>
<p style="Normal" xid="132">  --pid-path=/var/run/nginx/nginx.pid  \ </p>
<p style="Normal" xid="133">  --lock-path=/var/lock/nginx.lock \ </p>
<p style="Normal" xid="134">  --user=nginx \ </p>
<p style="Normal" xid="135">  --group=nginx \ </p>
<p style="Normal" xid="136">  --with-http_ssl_module \ </p>
<p style="Normal" xid="137">  --with-http_flv_module \ </p>
<p style="Normal" xid="138">  --with-http_stub_status_module \ </p>
<p style="Normal" xid="139">  --with-http_gzip_static_module \ </p>
<p style="Normal" xid="140">  --http-client-body-temp-path=/var/tmp/nginx/client/ \ </p>
<p style="Normal" xid="141">  --http-proxy-temp-path=/var/tmp/nginx/proxy/ \ </p>
<p style="Normal" xid="142">  --http-fastcgi-temp-path=/var/tmp/nginx/fcgi/ \ </p>
<p style="Normal" xid="143">  --http-uwsgi-temp-path=/var/tmp/nginx/uwsgi \ </p>
<p style="Normal" xid="144">  --http-scgi-temp-path=/var/tmp/nginx/scgi \ </p>
<p style="Normal" xid="145">  --with-pcre </p>
<p style="Normal" xid="146"># make &amp;&amp; make install</p>
<p style="Normal" xid="147"><c></c><c></c></p>
<p style="Normal" xid="148"><c></c><c></c></p>
<p style="Normal" xid="149">查看配置文件</p>
<p style="Normal" xid="150">koi-utf                 nginx.conf.default  win-utf </p>
<p style="Normal" xid="151">[root@localhost nginx]# ls </p>
<p style="Normal" xid="152">fastcgi.conf            koi-win             scgi_params </p>
<p style="Normal" xid="153">fastcgi.conf.default    mime.types          scgi_params.default </p>
<p style="Normal" xid="154">fastcgi_params          mime.types.default  uwsgi_params </p>
<p style="Normal" xid="155">fastcgi_params.default  nginx.conf          uwsgi_params.default </p>
<p style="Normal" xid="156">koi-utf                 nginx.conf.default  win-utf </p>
<p style="Normal" xid="157"><c></c><c></c></p>
<p style="Normal" xid="158">配置文件  每个worker支持的连接数 测试 给出合理的值 </p>
<p style="Normal" xid="159">events { </p>
<p style="Normal" xid="160">    worker_connections  1024; </p>
<p style="Normal" xid="161">} </p>
<p style="Normal" xid="162"><c></c><c></c></p>
<p style="Normal" xid="163">http段的</p>
<p style="Normal" xid="164">tcp_nopush  不做推送</p>
<p style="Normal" xid="165">每一个server定义一个虚拟主机  一个也要定义 </p>
<p style="Normal" xid="166">server中嵌套location /usi/  root “/web/htdocs” 可以定义document 和location</p>
<p style="Normal" xid="167">root 定义文件系统路径的 </p>
<p style="Normal" xid="168"><c></c><c></c></p>
<p style="Normal" xid="169">location uri {} 表示花括号定义的属性 对这个目录以及子目录下所有资源都生效 </p>
<p style="Normal" xid="170">location =uri {} 只对当前这一个资源生效</p>
<p style="Normal" xid="171"><c></c><c></c></p>
<p xid="172"><pbr/>location ～uri {}</p>
<p style="Normal" xid="173">location =～*uri{}</p>
<p style="Normal" xid="174">  模式匹配 ～区分大小写  ～*不区分大小写</p>
<p style="Normal" xid="175">   location ^～ {} 不做正则表达式</p>
<p style="Normal" xid="176"><c></c><c></c></p>
<p style="Normal" xid="177">优先级 =  ^~   ~  不加符号</p>
<p style="Normal" xid="178">		</p>
<p style="Normal" xid="179"><c></c><c></c></p>
<p style="Normal" xid="180">访问控制 在location上   </p>
<p style="Normal" xid="181">deny 192.168.1.102 拒绝这台主机     </p>
<p style="Normal" xid="182">allow 192.168.102   默认就是容许的</p>
<p style="Normal" xid="183"><c></c><c></c></p>
<p style="Normal" xid="184">{</p>
<p style="Normal" xid="185"><c></c><c></c></p>
<p style="Normal" xid="186">   allow 192.168.102;</p>
<p style="Normal" xid="187">   deny all;</p>
<p style="Normal" xid="188">  </p>
<p style="Normal" xid="189">}</p>
<p style="Normal" xid="190"><c></c><c></c></p>
<p style="Normal" xid="191">基于帐号密码 </p>
<p style="Normal" xid="192">也是定义在 location中</p>
<p style="Normal" xid="193">{</p>
<p style="Normal" xid="194">  auth basic    “显示给用户的” ;</p>
<p style="Normal" xid="195">  auth_basic_user_file  htpassword;</p>
<p style="Normal" xid="196"> }</p>
<p style="Normal" xid="197"><c></c><c></c></p>
<p style="Normal" xid="198">这个要用htpasswd创建 是httpd的工具哦  </p>
<p style="Normal" xid="199"> htpasswd -c -m /etc/ngnix/.users  tom  第一次创建要用选项c  m制定md5 </p>
<p style="Normal" xid="200"> httpasswd -m /etc/ngnix/.users jerry</p>
<p style="Normal" xid="201">{</p>
<p style="Normal" xid="202">          auth_basic "hellow"; </p>
<p style="Normal" xid="203">           auth_basic_user_file /etc/nginx/.users; </p>
<p style="Normal" xid="204">}</p>
<p style="Normal" xid="205"><c></c><c></c></p>
<p style="Normal" xid="206">auto_index on  没有主页的时候列表 </p>
<p style="Normal" xid="207"><c></c><c></c></p>
<p style="Normal" xid="208">limit_Coon</p>
<p style="Normal" xid="209"><c></c><c></c></p>
<p style="Normal" xid="210">开启状态信息  里面也可以限制访问权限 用deny和allow</p>
<p style="Normal" xid="211">        location /status { </p>
<p style="Normal" xid="212">            stub_status on; </p>
<p style="Normal" xid="213">        }  </p>
<p style="Normal" xid="214">状态信息 包括 已经接收链接个数  已经处理的链接个数 已经处理的请求个数</p>
<p style="Normal" xid="215">reading 正在读取其首部的请求个数 </p>
<p style="Normal" xid="216">writing 正在读取其主体的请求的个数  或正处理其请求内容的请求个数 或者正在发送响应的个数</p>
<p style="Normal" xid="217">waiting长链接模式中保持的链接个数</p>
<p style="Normal" xid="218"><c></c><c></c></p>
<p style="Normal" xid="219"><c></c><c></c></p>
<p style="Normal" xid="220"><c></c><c></c></p>
<p style="Normal" xid="221">定义https server</p>
<p style="Normal" xid="222">server { </p>
<p style="Normal" xid="223">        listen       443 ssl; </p>
<p style="Normal" xid="224"><c></c><c></c></p>
<p xid="225"><pbr/>        server_name  localhost; </p>
<p style="Normal" xid="226"><c></c><c></c></p>
<p style="Normal" xid="227">        ssl                  on; </p>
<p style="Normal" xid="228">        ssl_certificate      nginx.cert; </p>
<p style="Normal" xid="229">        ssl_certificate_key  nginx.key; </p>
<p style="Normal" xid="230"><c></c><c></c></p>
<p style="Normal" xid="231">        ssl_session_cache    shared:SSL:1m; </p>
<p style="Normal" xid="232">        ssl_session_timeout  5m; </p>
<p style="Normal" xid="233"><c></c><c></c></p>
<p style="Normal" xid="234">        ssl_ciphers  HIGH:!aNULL:!MD5; </p>
<p style="Normal" xid="235">        ssl_prefer_server_ciphers  on; </p>
<p style="Normal" xid="236"><c></c><c></c></p>
<p style="Normal" xid="237">        location / { </p>
<p style="Normal" xid="238">            root   /web/ssl; </p>
<p style="Normal" xid="239">            index  index.html index.htm; </p>
<p style="Normal" xid="240">        } </p>
<p style="Normal" xid="241">    } </p>
<p style="Normal" xid="242">创建ssl证书</p>
<p style="Normal" xid="243"> (umask 077; openssl genrsa 2048 &gt; private/cakey.pem)</p>
<p style="Normal" xid="244">[root@localhost CA]# openssl req -new -x509 -key private/cakey.pem -out cacert.pem </p>
<p style="Normal" xid="245">root@localhost CA]# touch serial </p>
<p style="Normal" xid="246">[root@localhost CA]# echo 01 &gt; serial </p>
<p style="Normal" xid="247">[root@localhost CA]# touch index.txt </p>
<p style="Normal" xid="248" props="font-weight:bold">[root@localhost CA]# cd /etc/nginx </p>
<p style="Normal" xid="249" props="font-weight:bold">[root@localhost nginx]# mkdir ssl </p>
<p style="Normal" xid="250" props="font-weight:bold">[root@localhost nginx]# cd ssl </p>
<p style="Normal" xid="251" props="font-weight:bold">[root@localhost ssl]# (umask 077; openssl genrsa 1024 &gt; nginx.key) </p>
<p style="Normal" xid="252" props="font-weight:bold"><c props="font-weight:normal">[root@localhost ssl]# openssl req -new -key nginx.key -out nginx.csr </c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="1" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="2" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="253" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="254" props="font-weight:bold"><c props="font-weight:normal">配置php和nginx结合  编译php</c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="255" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="3" props="font-weight:bold"><c props="font-weight:normal">编译php </c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="4" props="text-align:left; font-weight:bold; dom-dir:ltr"> ./configure --prefix=/usr/local/php --with-mysql=/usr/local/mysql --with-openssl --enable-fpm --enable-sockets --enable-sysvshm --with-mysqli=/usr/local/mysql/bin/mysql_config --enable-mbstring --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib-dir --with-libxml-dir=/usr --enable-xml --with-mhash --with-mcrypt --with-config-file-path=/etc --with-config-file-scan-dir=/etc/php.d --with-bz2 --with-curl <c></c></p>
<p style="Normal" xid="256" props="text-align:left; font-weight:bold; dom-dir:ltr"><c></c><c></c></p>
<p style="Normal" xid="257" props="text-align:left; font-weight:bold; dom-dir:ltr">配置<c></c></p>
<p style="Normal" xid="258" props="text-align:left; font-weight:bold; dom-dir:ltr">[root@localhost php-5.5.14]# cp php.ini-production /etc/php.ini<c></c></p>
<p style="Normal" xid="278" props="text-align:left; font-weight:bold; dom-dir:ltr">[root@localhost php-5.5.14]# cp sapi/fpm/init.d.php-fpm  /etc/init.d/php-fpm<c></c></p>
<p style="Normal" xid="279" props="text-align:left; font-weight:bold; dom-dir:ltr"><c></c><c></c></p>
<p style="Normal" xid="259" props="text-align:left; font-weight:bold; dom-dir:ltr">[root@localhost php-5.5.14]# cd /usr/local/php/etc/<c></c></p>
<p style="Normal" xid="268" props="text-align:left; font-weight:bold; dom-dir:ltr">[root@localhost etc]# cp php-fpm.conf.default php-fpm.conf<c></c></p>
<p style="Normal" xid="269" props="text-align:left; font-weight:bold; dom-dir:ltr"><c></c><c></c></p>
<p style="Normal" xid="275" props="text-align:left; font-weight:bold; dom-dir:ltr"><c></c><c></c></p>
<p style="Normal" xid="276" props="text-align:left; font-weight:bold; dom-dir:ltr"><c></c><c></c></p>
<p style="Normal" xid="261" props="text-align:left; font-weight:bold; dom-dir:ltr">root@localhost etc]# vim php-fpm.conf <c></c></p>
<p style="Normal" xid="262" props="text-align:left; font-weight:bold; dom-dir:ltr">pm.max_children = 150  最多启动多少子进程<c></c></p>
<p style="Normal" xid="270" props="text-align:left; font-weight:bold; dom-dir:ltr">pm.start_servers = 5   启动时启动5个<c></c></p>
<p style="Normal" xid="272" props="text-align:left; font-weight:bold; dom-dir:ltr">pm.min_spare_servers = 3  最小空闲3个<c></c></p>
<p style="Normal" xid="263" props="text-align:left; font-weight:bold; dom-dir:ltr">pm.max_spare_servers = 10  最大空闲10<c></c></p>
<p style="Normal" xid="274" props="text-align:left; font-weight:bold; dom-dir:ltr">[root@localhost php-5.5.14]# chkconfig --add php-fpm<c></c></p>
<p style="Normal" xid="280" props="text-align:left; font-weight:bold; dom-dir:ltr">启动默认监听在本机的 9000端口<c></c></p>
<p style="Normal" xid="264" props="text-align:left; font-weight:bold; dom-dir:ltr"> <c></c></p>
<p style="Normal" xid="265" props="text-align:left; font-weight:bold; dom-dir:ltr"><c></c><c></c></p>
<p style="Normal" xid="266" props="text-align:left; font-weight:bold; dom-dir:ltr"><c></c><c></c></p>
<p style="Normal" xid="267" props="text-align:left; font-weight:bold; dom-dir:ltr">定义nginx的location的php<c></c></p>
<p style="Normal" xid="260" props="text-align:left; font-weight:bold; dom-dir:ltr"><c></c><c></c></p>
<p style="Normal" xid="281" props="text-align:left; font-weight:bold; dom-dir:ltr"> location ~ \.php$ {<c></c></p>
<p style="Normal" xid="291" props="text-align:left; font-weight:bold; dom-dir:ltr">            root           /web/htdoc;<c></c></p>
<p style="Normal" xid="292" props="text-align:left; font-weight:bold; dom-dir:ltr">            index          index.php index.html;<c></c></p>
<p style="Normal" xid="293" props="text-align:left; font-weight:bold; dom-dir:ltr">            fastcgi_pass   127.0.0.1:9000;<c></c></p>
<p style="Normal" xid="294" props="text-align:left; font-weight:bold; dom-dir:ltr">            fastcgi_index  index.php;<c></c></p>
<p style="Normal" xid="295" props="text-align:left; font-weight:bold; dom-dir:ltr">            fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;<c></c></p>
<p style="Normal" xid="296" props="text-align:left; font-weight:bold; dom-dir:ltr">            include        fastcgi_params;<c></c></p>
<p style="Normal" xid="297" props="text-align:left; font-weight:bold; dom-dir:ltr">        }<c></c></p>
<p style="Normal" xid="298" props="text-align:left; font-weight:bold; dom-dir:ltr"><c></c><c></c></p>
<p style="Normal" xid="5" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="6" props="text-align:left; font-weight:bold; dom-dir:ltr">[root@localhost nginx]# vim /etc/nginx/fastcgi_params<c></c></p>
<p style="Normal" xid="289" props="text-align:left; font-weight:bold; dom-dir:ltr"><c></c><c></c></p>
<p style="Normal" xid="290" props="text-align:left; font-weight:bold; tabstops:10.86cm/L0; dom-dir:ltr"><c></c><c></c></p>
<p style="Normal" xid="288" props="text-align:left; font-weight:bold; dom-dir:ltr"><c></c><c></c></p>
<p style="Normal" xid="7" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="8" props="font-weight:bold"><c props="font-weight:normal">I/O 模型  ：</c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="300" props="font-weight:bold"><c props="font-weight:normal">  阻塞</c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="302" props="font-weight:bold"><c props="font-weight:normal">  非阻塞：轮寻</c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="303" props="font-weight:bold"><c props="font-weight:normal">  同步 ：</c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="301" props="font-weight:bold"><c props="font-weight:normal">  异步 </c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="304" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="305" props="font-weight:bold"><c props="font-weight:normal">同步阻塞</c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="309" props="font-weight:bold"><c props="font-weight:normal">同步非阻塞：</c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="310" props="font-weight:bold"><c props="font-weight:normal">异步阻塞： IO 复用</c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="312" props="font-weight:bold"><c props="font-weight:normal">异步非阻塞：aio</c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="315" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="313" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="314" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="311" props="font-weight:bold"><c props="font-weight:normal">Nginx</c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="316" props="font-weight:bold"><c props="font-weight:normal">  mmap</c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="317" props="font-weight:bold"><c props="font-weight:normal">  event-driven</c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="318" props="font-weight:bold"><c props="font-weight:normal">      一个进程响应多个请求： 单线程进程 </c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="319" props="font-weight:bold"><c props="font-weight:normal">      支持aio</c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="320" props="font-weight:bold"><c props="font-weight:normal">LEno：</c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="321" props="font-weight:bold"><c props="font-weight:normal">  Enginx（fastcgi）+php-fpm</c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="322" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="323" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="324" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="325" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="333" props="font-weight:bold"><c props="font-weight:normal">Memery cache </c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="334" props="font-weight:bold"><c props="font-weight:normal">  万金油 </c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="335" props="font-weight:bold"><c props="font-weight:normal">  可序列化数据都能缓存 </c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="337" props="font-weight:bold"><c props="font-weight:normal">  hash索引  桶</c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="339" props="font-weight:bold"><c props="font-weight:normal">  最大支持1M 缓存对象</c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="340" props="font-weight:bold"><c props="font-weight:normal">  最小支持48字节  cs架构</c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="344" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="345" props="font-weight:bold"><c props="font-weight:normal">Redis</c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="346" props="font-weight:bold"><c props="font-weight:normal">Database</c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="347" props="font-weight:bold"><c props="font-weight:normal">NoSQL</c><c props="font-weight:normal"></c></p>
<p style="Normal" xid="350" props="font-weight:bold"><c props="font-weight:normal"></c></p>
<p style="Normal" xid="351" props="font-weight:bold"><c props="font-weight:normal">缓存  只能在http上下文定义 </c></p>
<p style="Normal" xid="353" props="font-weight:bold"><c props="font-weight:normal">keys_zone存储键的区域</c></p>
<p style="Normal" xid="355" props="font-weight:bold"><c props="font-weight:normal">levels定义有几级目录和每级目录的名字长度 最多有三级</c></p>
<p style="Normal" xid="356" props="font-weight:bold"><c props="font-weight:normal">max_size 定义缓存，目录的大小</c></p>
<p style="Normal" xid="357" props="font-weight:bold"><c props="font-weight:normal">如果缓存满了 就会调用cache_manager进程 根据lRU算法清理</c></p>
<p style="Normal" xid="358" props="font-weight:bold"><c props="font-weight:normal"></c></p>
<p style="Normal" xid="352" props="font-weight:bold"><c props="font-weight:normal">proxy_cache_path  /nginx/cache/first  levels=1:2:1  keys_zone=first:20m max_size=1g;</c></p>
<p style="Normal" xid="354" props="font-weight:bold"><c props="font-weight:normal"></c></p>
<p style="Normal" xid="348" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="349" props="font-weight:bold"><c props="font-weight:normal"></c><c props="font-weight:normal"> </c></p>
<p style="Normal" xid="342" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="343" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="336" props="font-weight:bold"><c props="font-weight:normal"></c><c props="font-weight:normal">定义 ：</c></p>
<p style="Normal" xid="359" props="text-align:left; font-weight:bold; dom-dir:ltr"><c> proxy_cache_path  /nginx/cache/first   levels=1:2 keys_zone=first:20m max_size=1g;</c></p>
<p style="Normal" xid="360" props="text-align:left; font-weight:bold; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="361" props="text-align:left; font-weight:bold; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="362" props="text-align:left; font-weight:bold; dom-dir:ltr"><c>还要在location中开启缓存功能</c></p>
<p style="Normal" xid="326" props="text-align:left; font-weight:bold; dom-dir:ltr"><c props="font-weight:normal"></c><c>location / {</c></p>
<p style="Normal" xid="363" props="text-align:left; font-weight:bold; dom-dir:ltr"><c>          prox y_pass http://webservers/;</c></p>
<p style="Normal" xid="364" props="text-align:left; font-weight:bold; dom-dir:ltr"><c>          proxy_set_header X-Real-IP  $remote_addr;</c></p>
<p style="Normal" xid="365" props="text-align:left; font-weight:bold; dom-dir:ltr"><c>          proxy_cache   first;</c></p>
<p style="Normal" xid="368" props="text-align:left; font-weight:bold; dom-dir:ltr"><c>           proxy_cache_valie 200 10m;   //对于响应代码为200的缓存10m</c></p>
<p style="Normal" xid="366" props="text-align:left; font-weight:bold; dom-dir:ltr"><c>        }</c></p>
<p style="Normal" xid="367" props="text-align:left; font-weight:bold; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="327" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="370" props="font-weight:bold">upstream_cache_status首部 返回  在 server上下文中定义 </p>
<p style="Normal" xid="328" props="text-align:left; font-weight:bold; dom-dir:ltr"><c>add_header X-Cache $upstream_cache_status;</c></p>
<p style="Normal" xid="371" props="text-align:left; font-weight:bold; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="329" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="330" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="331" props="font-weight:bold"><c props="font-weight:normal"></c><c props="font-weight:normal">另外的几种缓存 </c></p>
<p style="Normal" xid="372" props="font-weight:bold"><c props="font-weight:normal">   open_log_cache  日志缓存  先保存在内存</c></p>
<p style="Normal" xid="373" props="font-weight:bold"><c props="font-weight:normal">  open_file_cache; 文件缓存</c></p>
<p style="Normal" xid="332" props="font-weight:bold"><c props="font-weight:normal"></c><c props="font-weight:normal">   fastcgi_cache；慎用 </c></p>
<p style="Normal" xid="374" props="font-weight:bold"><c props="font-weight:normal"></c></p>
<p style="Normal" xid="375" props="font-weight:bold"><c props="font-weight:normal">而且nginx的limit限制也基于共享内存实现</c></p>
<p style="Normal" xid="306" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="307" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="308" props="font-weight:bold"><c props="font-weight:normal">ngixn：gzip </c></p>
<p style="Normal" xid="376" props="font-weight:bold"><c props="font-weight:normal"></c><c props="font-weight:normal">    gzip on; 可能使用缓存命中率下降 </c></p>
<p style="Normal" xid="10" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="377" props="font-weight:bold">upstream phpserver {</p>
<p style="Normal" xid="378" props="font-weight:bold">  server</p>
<p style="Normal" xid="380" props="font-weight:bold"> server</p>
<p style="Normal" xid="379" props="font-weight:bold"><c></c>}</p>
<p style="Normal" xid="384" props="font-weight:bold">upstream imagerserver {</p>
<p style="Normal" xid="385" props="font-weight:bold">  server1 </p>
<p style="Normal" xid="387" props="font-weight:bold">  server2</p>
<p style="Normal" xid="386" props="font-weight:bold"><c></c>}</p>
<p style="Normal" xid="396" props="font-weight:bold"><c></c></p>
<p style="Normal" xid="397" props="font-weight:bold">upstream staticserver {</p>
<p style="Normal" xid="398" props="font-weight:bold">   server1;</p>
<p style="Normal" xid="400" props="font-weight:bold">   server2;</p>
<p style="Normal" xid="399" props="font-weight:bold"><c></c>}</p>
<p style="Normal" xid="11" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="381" props="font-weight:bold">localtion ～*\.php$ {</p>
<p style="Normal" xid="382" props="font-weight:bold">    fastcgi_path http://phpserver;</p>
<p style="Normal" xid="383" props="font-weight:bold">  }</p>
<p style="Normal" xid="12" props="font-weight:bold"><c props="font-weight:normal"></c><c props="font-weight:normal">location ~*\.(jgp|gpeg|png|gif)$ {</c></p>
<p style="Normal" xid="388" props="font-weight:bold"><c props="font-weight:normal">  proxy_path  http://imagerserber;</c></p>
<p style="Normal" xid="389" props="font-weight:bold"><c props="font-weight:normal"></c><c props="font-weight:normal">}</c></p>
<p style="Normal" xid="390" props="font-weight:bold"><c props="font-weight:normal">location / {</c></p>
<p style="Normal" xid="393" props="font-weight:bold"><c props="font-weight:normal">  root  /web/htdocs;</c></p>
<p style="Normal" xid="395" props="font-weight:bold"><c props="font-weight:normal">  index index.php   index.html  index.htm  </c></p>
<p style="Normal" xid="394" props="font-weight:bold"><c props="font-weight:normal"></c><c props="font-weight:normal">}</c></p>
<p style="Normal" xid="391" props="font-weight:bold"><c props="font-weight:normal"></c></p>
<p style="Normal" xid="392" props="font-weight:bold"><c props="font-weight:normal"></c></p>
<p style="Normal" xid="13" props="font-weight:bold"><c props="font-weight:normal"></c><c></c></p>
<p style="Normal" xid="14" props="font-weight:bold"><c props="font-weight:normal">rewite 模块 </c></p>
<p style="Normal" xid="410" props="font-weight:bold"><c props="font-weight:normal">if通常用在server或者location中 </c></p>
<p style="Normal" xid="407" props="font-weight:bold"><c props="font-weight:normal">  if (condition) {</c></p>
<p style="Normal" xid="408" props="font-weight:bold"><c props="font-weight:normal">        </c></p>
<p style="Normal" xid="409" props="font-weight:bold"><c props="font-weight:normal"> }</c></p>
<p style="Normal" xid="402" props="font-weight:bold"><c props="font-weight:normal"></c></p>
<p style="Normal" xid="403" props="font-weight:bold"><c props="font-weight:normal">condition测试 </c></p>
<p style="Normal" xid="411" props="font-weight:bold"><c props="font-weight:normal">     双目测试</c></p>
<p style="Normal" xid="414" props="font-weight:bold"><c props="font-weight:normal">         ～  ，！～  匹配？</c></p>
<p style="Normal" xid="415" props="font-weight:bold"><c props="font-weight:normal">          =            ，！=</c></p>
<p style="Normal" xid="416" props="font-weight:bold"><c props="font-weight:normal">         ～*      ， ！～*</c></p>
<p style="Normal" xid="417" props="font-weight:bold"><c props="font-weight:normal">    if($request_method="post”) {</c></p>
<p style="Normal" xid="419" props="font-weight:bold"><c props="font-weight:normal">             </c></p>
<p style="Normal" xid="420" props="font-weight:bold"><c props="font-weight:normal">   }</c></p>
<p style="Normal" xid="421" props="font-weight:bold"><c props="font-weight:normal">  if($request_uri ~* “/forum” ) {</c></p>
<p style="Normal" xid="422" props="font-weight:bold"><c props="font-weight:normal"></c></p>
<p style="Normal" xid="423" props="font-weight:bold"><c props="font-weight:normal"></c><c props="font-weight:normal">}</c></p>
<p style="Normal" xid="425" props="font-weight:bold"><c props="font-weight:normal"></c></p>
<p style="Normal" xid="424" props="font-weight:bold"><c props="font-weight:normal"> return返回值  返回状态码 </c></p>
<p style="Normal" xid="418" props="font-weight:bold"><c props="font-weight:normal">防止盗链</c></p>
<p style="Normal" xid="430" props="font-weight:bold"><c props="font-weight:normal">none表示浏览器输入的 blocked表示对后面的规则判断</c></p>
<p style="Normal" xid="427" props="font-weight:bold"><c props="font-weight:normal">location  /photo/{</c></p>
<p style="Normal" xid="428" props="font-weight:bold"><c props="font-weight:normal"> valid_referers  none blocked www.mydomain.com  mydomain.com;</c></p>
<p style="Normal" xid="432" props="font-weight:bold"><c props="font-weight:normal"> if($invalid_referer)</c></p>
<p style="Normal" xid="433" props="font-weight:bold"><c props="font-weight:normal"> {</c></p>
<p style="Normal" xid="435" props="font-weight:bold"><c props="font-weight:normal">        return 403;</c></p>
<p style="Normal" xid="434" props="font-weight:bold"><c props="font-weight:normal"> }</c></p>
<p style="Normal" xid="429" props="font-weight:bold"><c props="font-weight:normal"></c><c props="font-weight:normal">} </c></p>
<p style="Normal" xid="431" props="font-weight:bold"><c props="font-weight:normal"></c></p>
<p style="Normal" xid="436" props="font-weight:bold"><c props="font-weight:normal">重定向  支持正则表达式  可以用在server location 和 if上下文</c></p>
<p style="Normal" xid="437" props="font-weight:bold"><c props="font-weight:normal"> location /images/ {</c></p>
<p style="Normal" xid="438" props="font-weight:bold"><c props="font-weight:normal">  rewrute http://172.168.1.1/image/;</c></p>
<p style="Normal" xid="439" props="font-weight:bold"><c props="font-weight:normal"></c><c props="font-weight:normal">}</c></p>
<p style="Normal" xid="426" props="font-weight:bold"><c props="font-weight:normal"></c></p>
<p style="Normal" xid="440" props="font-weight:bold"><c props="font-weight:normal">location / {</c></p>
<p style="Normal" xid="442" props="font-weight:bold"><c props="font-weight:normal">    root html;</c></p>
<p style="Normal" xid="444" props="font-weight:bold"><c props="font-weight:normal">   rewrite “^/bbs/”(.*) “ http://192.168.100.19/forum/$1;  last //$1引用括号</c></p>
<p style="Normal" xid="443" props="font-weight:bold"><c props="font-weight:normal"></c><c props="font-weight:normal">}</c></p>
<p style="Normal" xid="452" props="font-weight:bold"><c props="font-weight:normal"></c></p>
<p style="Normal" xid="453" props="font-weight:bold"><c props="font-weight:normal"></c></p>
<p style="Normal" xid="445" props="font-weight:bold"><c props="font-weight:normal"></c></p>
<p style="Normal" xid="446" props="text-align:left; font-weight:bold; dom-dir:ltr"><c>        location / {</c></p>
<p style="Normal" xid="447" props="text-align:left; font-weight:bold; dom-dir:ltr"><c>            root   html;</c></p>
<p style="Normal" xid="448" props="text-align:left; font-weight:bold; dom-dir:ltr"><c>            index  index.html index.htm;</c></p>
<p style="Normal" xid="449" props="text-align:left; font-weight:bold; dom-dir:ltr"><c>            rewrite ^/bbs/(.*)$  http://192.168.6.2/forum/$1 last;</c></p>
<p style="Normal" xid="450" props="text-align:left; font-weight:bold; dom-dir:ltr"><c>        }</c></p>
<p style="Normal" xid="451" props="text-align:left; font-weight:bold; dom-dir:ltr"><c>last： 本次重写完成后 ，重启一次检查 </c></p>
<p style="Normal" xid="454" props="text-align:left; font-weight:bold; dom-dir:ltr"><c>break 本次重写后 执行后续操作 </c></p>
<p style="Normal" xid="455" props="text-align:left; font-weight:bold; dom-dir:ltr"><c>redirect 显示生命临时重定向</c></p>
<p style="Normal" xid="456" props="text-align:left; font-weight:bold; dom-dir:ltr">perment 永久重定向 </p>
<p style="Normal" xid="457" props="text-align:left; font-weight:bold; dom-dir:ltr">注意死循环 </p>
<p style="Normal" xid="458" props="text-align:left; font-weight:bold; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="441" props="font-weight:bold"><c props="font-weight:normal"></c><c props="font-weight:normal">    </c></p>
<p style="Normal" xid="413" props="font-weight:bold"><c props="font-weight:normal">webDAV  支持上传下载功能 put delete 文件读写锁定 </c></p>
<p style="Normal" xid="459" props="font-weight:bold"><c props="font-weight:normal"></c></p>
<p style="Normal" xid="460" props="font-weight:bold"><c props="font-weight:normal">apache服务器支持put功能 开始dav_modules  dav_fs_module模块</c></p>
<p style="Normal" xid="461" props="font-weight:bold"><c props="font-weight:normal"></c></p>
<p style="Normal" xid="462" props="font-weight:bold"><c props="font-weight:normal">并且在Directory中添加一项dav on</c></p>
<p style="Normal" xid="463" props="font-weight:bold"><c props="font-weight:normal"></c></p>
<p style="Normal" xid="464" props="font-weight:bold"><c props="font-weight:normal"></c></p>
<p style="Normal" xid="465" props="font-weight:bold"><c props="font-weight:normal">nginx 注意空格  读写分离	</c></p>
<p style="Normal" xid="466" props="font-weight:bold"><c props="font-weight:normal">  location / {</c></p>
<p style="Normal" xid="467" props="font-weight:bold"><c props="font-weight:normal">      proxy_pass http://192.168.6.2/;</c></p>
<p style="Normal" xid="469" props="font-weight:bold"><c props="font-weight:normal">      if ($request_method = "PUT” )</c></p>
<p style="Normal" xid="470" props="font-weight:bold"><c props="font-weight:normal">     {</c></p>
<p style="Normal" xid="472" props="font-weight:bold"><c props="font-weight:normal">          proxy_pass http://192.168.6.130;</c></p>
<p style="Normal" xid="471" props="font-weight:bold"><c props="font-weight:normal">     }</c></p>
<p style="Normal" xid="468" props="font-weight:bold"><c props="font-weight:normal"></c><c props="font-weight:normal">}</c></p>
<p style="Normal" xid="473" props="font-weight:bold"><c props="font-weight:normal"></c></p>
<p style="Normal" xid="474" props="font-weight:bold"><c props="font-weight:normal"></c></p>
<p style="Normal" xid="475" props="font-weight:bold"><c props="font-weight:normal"></c></p>
</section>
</abiword>
